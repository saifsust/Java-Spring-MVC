
stop tomcat :

First of all check your port : 8080 on your system.

I am using linux , i have followed this approach and it worked for me.

Step 1 : sudo netstat -nlp | grep 8080

It has shown which PID is listening to my port.

tcp6 0 0 :::8080 ::: LISTEN 1112/java*

Step 2 : sudo kill -TERM 1112

And run your project on STS :

Run As -> Run on Server

And it worked fine on http://localhost:8080/myapp/


sts install
https://jmguimera.blogspot.com/2016/08/instalar-el-spring-suite-tool-eclipse_23.html



/tomcat file directory add

 -->
      <Host appBase="webapps" autoDeploy="true" name="localhost" unpackWARs="true">

        <!-- SingleSignOn valve, share authentication between web applications
             Documentation at: /docs/config/valve.html -->
        <!--
        <Valve className="org.apache.catalina.authenticator.SingleSignOn" />
        -->

        <!-- Access log processes all example.
             Documentation at: /docs/config/valve.html
             Note: The pattern used is equivalent to using pattern="common" -->
        <Valve className="org.apache.catalina.valves.AccessLogValve" directory="logs" pattern="%h %l %u %t &quot;%r&quot; %s %b" prefix="localhost_access_log" suffix=".txt"/>

       
      <Context path="/Saiful_IT_SOLUTION/storage" docBase="/media/saif-sust/WEB_project/Mycompany/storage/" />
      
      
      <Context docBase="Mycompany" path="/Saiful_IT_SOLUTION" reloadable="true" source="org.eclipse.jst.jee.server:Mycompany"/>
      
      </Host>
